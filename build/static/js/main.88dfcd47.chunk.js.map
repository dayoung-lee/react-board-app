{"version":3,"sources":["components/TOC.js","components/MainContent.js","components/ReadContent.js","components/UpdateContent.js","components/CreateContent.js","components/Subject.js","components/Control.js","App.js","serviceWorker.js","index.js"],"names":["TOC","newProps","newState","this","props","data","lists","_data","i","length","push","key","id","height","href","onClick","e","preventDefault","onChangePage","bind","title","name","date","class","width","Component","MainContent","desc","ReadContent","UpdateContent","state","inputFormHandler","setState","target","value","action","method","onSubmit","currentDate","moment","format","type","placeholder","size","onChange","rows","cols","CreateContent","Subject","sub","Control","onChangeMode","App","max_content_id","mode","subject","welcome","contents","selected_content_id","_title","_desc","_article","_content","getReadContent","_name","_date","_contents","Array","from","_id","className","Number","_mode","window","confirm","splice","alert","getContent","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88dfcd47.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass TOC extends Component{\r\n  shouldComponentUpdate(newProps, newState){    \r\n    if(this.props.data === newProps.data){\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }  \r\n  render(){\r\n        var lists = [];\r\n        var _data = this.props.data;\r\n        var i = 0;\r\n        while( i< _data.length ){\r\n            lists.push(\r\n            <tr key={_data[i].id}>\r\n                <td height = \"40\">{_data[i].id}</td>\r\n                <td>\r\n                <a href = {'/content/' + _data[i].id}                \r\n                onClick = {function(id, e){  \r\n                    e.preventDefault();\r\n                    this.props.onChangePage(id);\r\n                }.bind(this, _data[i].id)}\r\n                >{_data[i].title}</a></td>\r\n                <td>{_data[i].name}</td>\r\n                <td>{_data[i].date}</td>\r\n            </tr>\r\n            );            \r\n            i++;\r\n        }\r\n      return(\r\n        <div class = \"list\">\r\n          <table>\r\n            <tr>\r\n              <th width = \"4%\">#</th>\r\n              <th width = \"40%\">Title</th>\r\n              <th width = \"15%\">Name</th>\r\n              <th width = \"7%\">Date</th>\r\n            </tr>\r\n            {lists}\r\n            </table>\r\n        </div>    \r\n      );\r\n    }\r\n  }\r\n\r\n  export default TOC;","import React, {Component} from 'react';\r\n\r\n\r\nclass MainContent extends Component{    \r\n    render(){\r\n      return(        \r\n        <article>\r\n          <h2>{this.props.title}</h2>\r\n          <p>{this.props.desc}</p>\r\n      </article>\r\n      );\r\n    }\r\n  \r\n  }\r\nexport default MainContent;","import React, {Component} from 'react';\r\n\r\n\r\nclass ReadContent extends Component{    \r\n    render(){\r\n      return(        \r\n        <article>\r\n          <p id = \"title\">{this.props.title}</p>\r\n          <p id = \"nameDate\">Name: {this.props.name} Date: {this.props.date}</p>          \r\n          <p id = \"content\">Content: {this.props.desc}</p>\r\n      </article>\r\n      );\r\n    }\r\n  \r\n  }\r\nexport default ReadContent;","import React, {Component} from 'react';\r\nimport moment from 'moment';\r\n\r\nclass UpdateContent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.data.id,\r\n            title: this.props.data.title,\r\n            name: this.props.data.name,\r\n            date: this.props.data.date,\r\n            desc: this.props.data.desc\r\n        }\r\n        this.inputFormHandler = this.inputFormHandler.bind(this);\r\n    }\r\n    inputFormHandler(e){\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n    render(){\r\n        return(            \r\n            <article>\r\n                <h2>Update</h2>\r\n                <form action=\"/update_process\" method=\"post\"\r\n                    onSubmit={function(e){\r\n                        var currentDate = moment().format(\"YYYY/MM/DD\");\r\n                        e.preventDefault();\r\n                        this.props.onSubmit(\r\n                            this.state.id,\r\n                            this.state.title,\r\n                            this.state.name,\r\n                            currentDate,\r\n                            this.state.desc\r\n                        )}.bind(this)}>\r\n                    \r\n                    <input type = \"hidden\" name=\"id\" value={this.state.id}></input>\r\n\r\n                    <p><input \r\n                        type=\"text\" \r\n                        name = \"title\" \r\n                        placeholder = \"title\"\r\n                        size = \"10\"\r\n                        value = {this.state.title}\r\n                        onChange = {this.inputFormHandler}></input></p>\r\n                    {/* read only name */}\r\n                    <p><input type=\"text\" name = \"name\"  size = \"10\" placeholder = \"name\" value={this.props.data.name}></input></p>\r\n                    <p><textarea name =\"desc\" placeholder = \"type here...\" rows=\"4\" cols=\"50\" value={this.state.desc} \r\n                    onChange = {this.inputFormHandler}></textarea></p>\r\n                    <p><input id = \"submitBtn\" type = \"submit\"></input></p>\r\n                </form>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateContent;","import React, {Component} from 'react';\r\nimport moment from 'moment';\r\n\r\nclass CreateContent extends Component{\r\n    render(){\r\n        return(\r\n            <article>\r\n                <h2>Create</h2>\r\n                <form action=\"/create_process\" method=\"post\"\r\n                    onSubmit={function(e){\r\n                        var currentDate = moment().format(\"YYYY/MM/DD\");\r\n                        e.preventDefault();\r\n                        this.props.onSubmit(\r\n                            e.target.title.value,\r\n                            e.target.name.value,\r\n                            currentDate,\r\n                            e.target.desc.value\r\n                        )                     \r\n                    }.bind(this)}>\r\n                    <p><input type=\"text\" name = \"title\" placeholder = \"title\" size = \"10\"></input></p>\r\n                    <p><input type=\"text\" name = \"name\" placeholder = \"name\" size = \"10\"></input></p>\r\n                    <p><textarea name =\"desc\" placeholder = \"type here...\" rows=\"4\" cols=\"50\"></textarea></p>\r\n                    <p><input type = \"submit\"></input></p>\r\n                </form>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateContent;","import React, {Component} from 'react';\r\nclass Subject extends Component{\r\n    render(){\r\n      return(\r\n        <header>\r\n          <p><a href = \"/\" onClick={function(e){\r\n              e.preventDefault();\r\n              this.props.onChangePage();\r\n          }.bind(this)}>{this.props.title}</a></p>\r\n          {this.props.sub}\r\n          </header>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Subject;","import React, {Component} from 'react';\r\nclass Control extends Component{\r\n    render(){\r\n      return(\r\n        <div class = \"control\">\r\n        <a href = \"/create\" onClick={function(e){\r\n          e.preventDefault();\r\n          this.props.onChangeMode('create');\r\n        }.bind(this)}><button>Create</button></a>\r\n\r\n        <a href = \"/update\" onClick={function(e){\r\n          e.preventDefault();\r\n          this.props.onChangeMode('update');\r\n        }.bind(this)}><button>Update</button></a>\r\n\r\n        <input id = \"deleteBtn\" type = \"button\" value = \"Delete\" onClick={function(e){\r\n          e.preventDefault();\r\n          this.props.onChangeMode('delete');\r\n        }.bind(this)}></input>\r\n      </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Control;","import React, {Component, createContext} from 'react';\nimport TOC from './components/TOC';\nimport MainContent from './components/MainContent';\nimport ReadContent from './components/ReadContent';\nimport UpdateContent from './components/UpdateContent';\nimport CreateContent from './components/CreateContent';\nimport Subject from './components/Subject';\nimport Control from './components/Control';\nimport SlideMenu from 'react-slide-menu';\nimport './App.css';\n\nimport $ from \"jquery\";\n\nclass App extends Component {  \n  constructor(props){\n    super(props);\n    this.max_content_id=3;\n    this.state = {\n      mode:'welcome',\n      // selected_content_id : 1,\n      subject:{title:'BOARD'},\n      welcome:{title:'Welcome', desc:'Hello, React!! This is main page.'},     \n      contents:[\n        {id:1, title:'Test1', name: 'Dayoung Lee', date: '2020/01/20', desc: 'This is test1!'},\n        {id:2, title:'Test2', name: 'Jane Doe', date: '2020/01/23', desc: 'This is test2!'},\n        {id:3, title:'Test3', name: 'Tyler Yeo', date: '2020/01/24', desc: 'This is test3!'}\n      ]\n    }\n  }\n  \n  getReadContent(){\n    var i = 0;\n        while (i < this.state.contents.length){        \n          var data = this.state.contents[i];  \n          if(data.id === this.state.selected_content_id){\n            return data;\n            // _title = data.title;\n            // _name = data.name;\n            // _date= data.date;\n            // _desc = data.desc;\n            break;\n          }\n          i++;\n        }\n  }\n  getContent(){\n      var _title, _name, _date, _desc, _article = null;\n      // main\n      if(this.state.mode === 'welcome'){\n        _title = this.state.welcome.title;\n        _desc = this.state.welcome.desc;\n        _article = <MainContent title = {_title} desc = {_desc}></MainContent>\n      } // read\n      else if (this.state.mode === 'read'){\n        var _content = this.getReadContent();\n        _article = <ReadContent title = {_content.title} name = {_content.name} date = {_content.date} desc = {_content.desc}></ReadContent>        \n      }\n      // create\n      else if (this.state.mode === 'create'){\n        _article = <CreateContent onSubmit={function(_title, _name, _date, _desc){\n          // add content to this.state.content\n          this.max_content_id++;\n          // this.state.contents.push(\n          //   {id:this.max_content_id, title:_title, name: _name, date: _date, desc:_desc}\n          // );\n          // var _contents = this.state.contents.concat(\n          //   {id:this.max_content_id, title:_title, name: _name, date: _date, desc:_desc});\n\n          var _contents = Array.from(this.state.contents);\n          _contents.push({id:this.max_content_id, title:_title, name: _name, date: _date, desc:_desc});\n          this.setState({\n            contents: _contents,\n            mode: 'read',\n            selected_content_id: this.max_content_id\n          })        \n        }.bind(this)}>        \n        </CreateContent>     \n      } \n      // update\n      else if (this.state.mode === 'update'){\n        var _content = this.getReadContent();\n        _article = <UpdateContent data = {_content} onSubmit={\n          function(_id, _title, _name, _date, _desc){\n            var _contents = Array.from(this.state.contents);\n            var i = 0;\n            while(i<_contents.length){\n              if(_contents[i].id === _id){\n                _contents[i] = {id:_id, title:_title, name:_name, date:_date, desc:_desc}\n                break;\n              }\n              i++;\n            }\n            this.setState({\n            contents: _contents,\n            mode:'read'\n          })        \n          }.bind(this)}>        \n        </UpdateContent>     \n      }\n      return _article;\n  }\n  \n  \n\n  render(){        \n  \n    return (\n      <div className=\"App\">        \n\n        <Subject \n          title = {this.state.subject.title} \n          onChangePage = {function(){\n            this.setState({\n              mode:'welcome'\n            })\n          }.bind(this)}>\n        </Subject>\n      \n        <TOC \n        onChangePage={\n          function(id){\n            this.setState({\n              mode:'read',\n              selected_content_id:Number(id)\n            })\n          }.bind(this)}\n        data = {this.state.contents}></TOC>        \n  \n        <Control onChangeMode = {function(_mode){\n          if(_mode === 'delete'){\n            if(window.confirm('Do you really want to delete it?')){\n              var _contents = Array.from(this.state.contents);\n              var i = 0;\n              while(i< _contents.length){\n                if(_contents[i].id === this.state.selected_content_id){\n                  _contents.splice(i,1);\n                  break;\n                }\n                i++;\n              }\n              this.setState({\n                mode:'welcome',\n                contents:_contents\n              });\n              alert('deleted!');\n            }\n          }else{            \n            this.setState({\n              mode: _mode \n            });\n          }\n        }.bind(this)}></Control>\n\n        {this.getContent()}\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}